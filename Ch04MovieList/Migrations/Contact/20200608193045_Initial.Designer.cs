// <auto-generated />
using Ch04MovieList.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ch04MovieList.Migrations.Contact
{
    [DbContext(typeof(ContactContext))]
    [Migration("20200608193045_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ch04MovieList.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            Address = "123 Street St",
                            Name = "Sally",
                            Note = "New work friend",
                            PhoneNumber = "515-123-4567"
                        },
                        new
                        {
                            ContactId = 2,
                            Address = "987 Circle Dr",
                            Name = "Pashmina",
                            Note = "Neighbor",
                            PhoneNumber = "515-555-1122"
                        },
                        new
                        {
                            ContactId = 3,
                            Address = "314 Pie Lane",
                            Name = "Bernard",
                            Note = "Handyman",
                            PhoneNumber = "515-654-3210"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
